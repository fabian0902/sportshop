{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabian FF\\\\Desktop\\\\envio\\\\sportShop\\\\client\\\\src\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport ProductsAPI from './api/ProductsAPI';\nimport UserAPI from './api/UserAPI';\nimport axios from 'axios';\nimport CategoriesAPI from './api/CategoriesAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nexport const GlobalState = /*#__PURE__*/createContext();\nexport const DataProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [token, setToken] = useState(false);\n  useEffect(() => {\n    const firstLogin = localStorage.getItem(\"firstLogin\");\n\n    if (firstLogin) {\n      const refreshToken = async () => {\n        try {\n          const res = await axios.get(\"/user/refresh_token\");\n          setToken(res.data.accesstoken);\n          setTimeout(() => {\n            refreshToken();\n          }, 10 * 60 * 1000);\n        } catch (err) {\n          if (err.response) {\n            console.error(`Error en la respuesta del servidor: ${err.response.status} - ${err.response.data}`);\n          } else if (err.request) {\n            console.error('No hubo respuesta del servidor:', err.request);\n          } else {\n            console.error('Error:', err.message);\n          }\n        }\n      };\n\n      refreshToken();\n    }\n  }, []);\n  ProductsAPI();\n  const state = {\n    token: [token, setToken],\n    ProductsAPI: ProductsAPI(),\n    UserAPI: UserAPI(token),\n    CategoriesAPI: CategoriesAPI()\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalState.Provider, {\n    value: state,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataProvider, \"4YI+OkmfP7KlNMTGnxr/lb0YS/g=\");\n\n_c = DataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["C:/Users/Fabian FF/Desktop/envio/sportShop/client/src/GlobalState.js"],"names":["createContext","useState","useEffect","ProductsAPI","UserAPI","axios","CategoriesAPI","defaults","withCredentials","GlobalState","DataProvider","children","token","setToken","firstLogin","localStorage","getItem","refreshToken","res","get","data","accesstoken","setTimeout","err","response","console","error","status","request","message","state"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,OAAOC,WAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;AAEAD,KAAK,CAACE,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAEA,OAAO,MAAMC,WAAW,gBAAGT,aAAa,EAAjC;AAEP,OAAO,MAAMU,YAAY,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAEvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;;AACA,QAAIF,UAAJ,EAAgB;AACZ,YAAMG,YAAY,GAAG,YAAY;AAC7B,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,qBAAV,CAAlB;AACAN,UAAAA,QAAQ,CAACK,GAAG,CAACE,IAAJ,CAASC,WAAV,CAAR;AACAC,UAAAA,UAAU,CAAC,MAAM;AACbL,YAAAA,YAAY;AACf,WAFS,EAEP,KAAK,EAAL,GAAU,IAFH,CAAV;AAGH,SAND,CAME,OAAOM,GAAP,EAAY;AACV,cAAIA,GAAG,CAACC,QAAR,EAAkB;AACdC,YAAAA,OAAO,CAACC,KAAR,CAAe,uCAAsCH,GAAG,CAACC,QAAJ,CAAaG,MAAO,MAAKJ,GAAG,CAACC,QAAJ,CAAaJ,IAAK,EAAhG;AACH,WAFD,MAEO,IAAIG,GAAG,CAACK,OAAR,EAAiB;AACpBH,YAAAA,OAAO,CAACC,KAAR,CAAc,iCAAd,EAAiDH,GAAG,CAACK,OAArD;AACH,WAFM,MAEA;AACHH,YAAAA,OAAO,CAACC,KAAR,CAAc,QAAd,EAAwBH,GAAG,CAACM,OAA5B;AACH;AACJ;AACJ,OAhBD;;AAiBAZ,MAAAA,YAAY;AACf;AACJ,GAtBQ,EAsBN,EAtBM,CAAT;AAyBAd,EAAAA,WAAW;AACX,QAAM2B,KAAK,GAAC;AACRlB,IAAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR,CADC;AAERV,IAAAA,WAAW,EAAEA,WAAW,EAFhB;AAGRC,IAAAA,OAAO,EAAGA,OAAO,CAACQ,KAAD,CAHT;AAIRN,IAAAA,aAAa,EAAEA,aAAa;AAJpB,GAAZ;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEwB,KAA7B;AAAA,cACKnB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3CM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import {createContext, useState, useEffect} from 'react';\nimport ProductsAPI  from './api/ProductsAPI';\nimport UserAPI  from './api/UserAPI';\nimport axios from 'axios';\nimport CategoriesAPI from './api/CategoriesAPI';\n\naxios.defaults.withCredentials = true \n\nexport const GlobalState = createContext()\n\nexport const DataProvider = ({children}) =>{\n\n    const [token, setToken] = useState(false)\n    \n    \n    useEffect(() => {\n        const firstLogin = localStorage.getItem(\"firstLogin\");\n        if (firstLogin) {\n            const refreshToken = async () => {\n                try {\n                    const res = await axios.get(\"/user/refresh_token\");\n                    setToken(res.data.accesstoken);\n                    setTimeout(() => {\n                        refreshToken();\n                    }, 10 * 60 * 1000);\n                } catch (err) {\n                    if (err.response) {\n                        console.error(`Error en la respuesta del servidor: ${err.response.status} - ${err.response.data}`);\n                    } else if (err.request) {\n                        console.error('No hubo respuesta del servidor:', err.request);\n                    } else {\n                        console.error('Error:', err.message);\n                    }\n                }\n            };\n            refreshToken();\n        }\n    }, []);\n\n\n    ProductsAPI()\n    const state={\n        token: [token, setToken],\n        ProductsAPI: ProductsAPI(),\n        UserAPI : UserAPI(token),\n        CategoriesAPI: CategoriesAPI()\n    }\n\n    return(\n        <GlobalState.Provider value={state}>\n            {children}\n        </GlobalState.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}