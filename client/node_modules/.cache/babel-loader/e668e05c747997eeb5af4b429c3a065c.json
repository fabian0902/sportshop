{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nfunction UserAPI(token) {\n  _s();\n\n  //NO OLVIDAR PASAR EL TOKEN A LA FUNCION PRINCIPAL\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get(\"/user/infor\", {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser(); //no olvidar iniciar la funcion\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Favor iniciar sesio\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch(\"/user/addcart\", {\n        cart: [...cart, { ...product,\n          quantity: 0\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"This product has been added to cart\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n    history: [history, setHistory]\n  };\n}\n\n_s(UserAPI, \"yzxmcxqkg20DNTPJiV0UMsZEH88=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/Fabian FF/Downloads/ecommerce-master/ecommerce-master/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","defaults","withCredentials","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addCart","product","check","every","item","_id","quantity","patch"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGAA,KAAK,CAACC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAAE;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGK,KAAH,EAAS;AACL,YAAMS,OAAO,GAAG,YAAU;AACtB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEb;AAAhB;AAD8B,WAAzB,CAAlB;AAGAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBX,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AACAE,UAAAA,OAAO,CAACI,GAAG,CAACI,IAAJ,CAAST,IAAV,CAAP;AAEH,SARD,CAQE,OAAOW,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAAnB,CAAL;AACH;AACJ,OAZD;;AAaAV,MAAAA,OAAO,GAdF,CAcI;AACZ;AAEJ,GAlBQ,EAkBP,CAACT,KAAD,CAlBO,CAAT;;AAuBA,QAAMoB,OAAO,GAAI,MAAOC,OAAP,IAAiB;AAC9B,QAAG,CAACpB,QAAJ,EAAc,OAAOgB,KAAK,CAAC,qBAAD,CAAZ;AAEd,UAAMK,KAAK,GAAGjB,IAAI,CAACkB,KAAL,CAAWC,IAAI,IAAE;AAC3B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;;AAGA,QAAGH,KAAH,EAAS;AACLhB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAS,EAAC,GAAGgB,OAAJ;AAAaK,QAAAA,QAAQ,EAAE;AAAvB,OAAT,CAAD,CAAP;AACA,YAAM9B,KAAK,CAAC+B,KAAN,CAAY,eAAZ,EAA6B;AAACtB,QAAAA,IAAI,EAAC,CAAC,GAAGA,IAAJ,EAAS,EAAC,GAAGgB,OAAJ;AAAaK,UAAAA,QAAQ,EAAE;AAAvB,SAAT;AAAN,OAA7B,EAAwE;AAC1Ed,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAEb;AAAhB;AADiE,OAAxE,CAAN;AAGH,KALD,MAKK;AACDiB,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ,GAdD;;AAeA,SAAO;AACHhB,IAAAA,QAAQ,EAAG,CAACA,QAAD,EAAWC,WAAX,CADR;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAHH;AAIHc,IAAAA,OAAO,EAAEA,OAJN;AAKHb,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV;AALN,GAAP;AAQH;;GApDQT,O;;KAAAA,O;AAsDT,eAAeA,OAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'axios';  \n\n\naxios.defaults.withCredentials = true \n\nfunction UserAPI(token) { //NO OLVIDAR PASAR EL TOKEN A LA FUNCION PRINCIPAL\n    const [isLogged, setIsLogged] = useState(false)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [cart, setCart] = useState([])\n    const [history, setHistory] = useState([])\n\n    useEffect(()=>{\n        if(token){\n            const getUser = async ()=>{\n                try {\n                    const res = await axios.get(\"/user/infor\", {\n                        headers: {Authorization: token}\n                    })\n                    setIsLogged(true)\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n                    setCart(res.data.cart)\n                    \n                } catch (err) {\n                    alert(err.response.data.msg)\n                }\n            }\n            getUser()//no olvidar iniciar la funcion\n        }\n\n    },[token])\n\n    \n\n\n    const addCart =  async (product)=>{\n        if(!isLogged) return alert(\"Favor iniciar sesio\")\n\n        const check = cart.every(item=>{\n            return item._id !== product._id\n        })\n        if(check){\n            setCart([...cart,{...product, quantity: 1}])\n            await axios.patch(\"/user/addcart\", {cart:[...cart,{...product, quantity: 0}]},{\n                headers: {Authorization: token}\n            })\n        }else{\n            alert(\"This product has been added to cart\")\n        }\n    }\n    return { \n        isLogged : [isLogged, setIsLogged],\n        isAdmin: [isAdmin, setIsAdmin],\n        cart: [cart, setCart],\n        addCart: addCart,\n        history: [history, setHistory]\n\n}\n}\n\nexport default UserAPI;\n"]},"metadata":{},"sourceType":"module"}