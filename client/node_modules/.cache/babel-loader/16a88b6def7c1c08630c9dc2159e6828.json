{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\nfunction UserAPI(token) {\n  _s();\n  //NO OLVIDAR PASAR EL TOKEN A LA FUNCION PRINCIPAL\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get(\"/user/infor\", {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n      getUser(); //no olvidar iniciar la funcion\n    }\n  }, [token]);\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Favor iniciar sesi칩n o login para comprar\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n    if (check) {\n      setCart([...cart, {\n        ...product,\n        quantity: 1\n      }]);\n      await axios.patch(\"/user/addcart\", {\n        cart: [...cart, {\n          ...product,\n          quantity: 0\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"Este producto ha sido a침adido a su carrito de compras\");\n    }\n  };\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n    history: [history, setHistory]\n  };\n}\n_s(UserAPI, \"yzxmcxqkg20DNTPJiV0UMsZEH88=\");\n_c = UserAPI;\nexport default UserAPI;\nvar _c;\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"names":["useState","useEffect","axios","defaults","withCredentials","UserAPI","token","_s","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addCart","product","check","every","item","_id","quantity","patch","_c","$RefreshReg$"],"sources":["C:/Users/Fabian FF/Desktop/envio/sportShop/client/src/api/UserAPI.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'axios';  \n\n\naxios.defaults.withCredentials = true \n\nfunction UserAPI(token) { //NO OLVIDAR PASAR EL TOKEN A LA FUNCION PRINCIPAL\n    const [isLogged, setIsLogged] = useState(false)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [cart, setCart] = useState([])\n    const [history, setHistory] = useState([])\n\n    useEffect(()=>{\n        if(token){\n            const getUser = async ()=>{\n                try {\n                    const res = await axios.get(\"/user/infor\", {\n                        headers: {Authorization: token}\n                    })\n                    setIsLogged(true)\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n                    setCart(res.data.cart)\n                    \n                } catch (err) {\n                    alert(err.response.data.msg)\n                }\n            }\n            getUser()//no olvidar iniciar la funcion\n        }\n\n    },[token])\n\n    \n\n\n    const addCart =  async (product)=>{\n        if(!isLogged) return alert(\"Favor iniciar sesi칩n o login para comprar\")\n\n        const check = cart.every(item=>{\n            return item._id !== product._id\n        })\n        if(check){\n            setCart([...cart,{...product, quantity: 1}])\n            await axios.patch(\"/user/addcart\", {cart:[...cart,{...product, quantity: 0}]},{\n                headers: {Authorization: token}\n            })\n        }else{\n            alert(\"Este producto ha sido a침adido a su carrito de compras\")\n        }\n    }\n    return { \n        isLogged : [isLogged, setIsLogged],\n        isAdmin: [isAdmin, setIsAdmin],\n        cart: [cart, setCart],\n        addCart: addCart,\n        history: [history, setHistory]\n\n}\n}\n\nexport default UserAPI;\n"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AAGzBA,KAAK,CAACC,QAAQ,CAACC,eAAe,GAAG,IAAI;AAErC,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAAE;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAI;IACV,IAAGK,KAAK,EAAC;MACL,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAU;QACtB,IAAI;UACA,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,aAAa,EAAE;YACvCC,OAAO,EAAE;cAACC,aAAa,EAAEd;YAAK;UAClC,CAAC,CAAC;UACFG,WAAW,CAAC,IAAI,CAAC;UACjBQ,GAAG,CAACI,IAAI,CAACC,IAAI,KAAK,CAAC,GAAGX,UAAU,CAAC,IAAI,CAAC,GAAGA,UAAU,CAAC,KAAK,CAAC;UAC1DE,OAAO,CAACI,GAAG,CAACI,IAAI,CAACT,IAAI,CAAC;QAE1B,CAAC,CAAC,OAAOW,GAAG,EAAE;UACVC,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACJ,IAAI,CAACK,GAAG,CAAC;QAChC;MACJ,CAAC;MACDV,OAAO,CAAC,CAAC;IACb;EAEJ,CAAC,EAAC,CAACV,KAAK,CAAC,CAAC;EAKV,MAAMqB,OAAO,GAAI,MAAOC,OAAO,IAAG;IAC9B,IAAG,CAACpB,QAAQ,EAAE,OAAOgB,KAAK,CAAC,2CAA2C,CAAC;IAEvE,MAAMK,KAAK,GAAGjB,IAAI,CAACkB,KAAK,CAACC,IAAI,IAAE;MAC3B,OAAOA,IAAI,CAACC,GAAG,KAAKJ,OAAO,CAACI,GAAG;IACnC,CAAC,CAAC;IACF,IAAGH,KAAK,EAAC;MACLhB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAC;QAAC,GAAGgB,OAAO;QAAEK,QAAQ,EAAE;MAAC,CAAC,CAAC,CAAC;MAC5C,MAAM/B,KAAK,CAACgC,KAAK,CAAC,eAAe,EAAE;QAACtB,IAAI,EAAC,CAAC,GAAGA,IAAI,EAAC;UAAC,GAAGgB,OAAO;UAAEK,QAAQ,EAAE;QAAC,CAAC;MAAC,CAAC,EAAC;QAC1Ed,OAAO,EAAE;UAACC,aAAa,EAAEd;QAAK;MAClC,CAAC,CAAC;IACN,CAAC,MAAI;MACDkB,KAAK,CAAC,uDAAuD,CAAC;IAClE;EACJ,CAAC;EACD,OAAO;IACHhB,QAAQ,EAAG,CAACA,QAAQ,EAAEC,WAAW,CAAC;IAClCC,OAAO,EAAE,CAACA,OAAO,EAAEC,UAAU,CAAC;IAC9BC,IAAI,EAAE,CAACA,IAAI,EAAEC,OAAO,CAAC;IACrBc,OAAO,EAAEA,OAAO;IAChBb,OAAO,EAAE,CAACA,OAAO,EAAEC,UAAU;EAErC,CAAC;AACD;AAACR,EAAA,CApDQF,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAsDhB,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}