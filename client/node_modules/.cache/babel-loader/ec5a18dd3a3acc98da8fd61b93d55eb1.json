{"ast":null,"code":"import React from'react';import PaypalExpressBtn from'react-paypal-express-checkout';import{jsx as _jsx}from\"react/jsx-runtime\";export default class PaypalButton extends React.Component{render(){const onSuccess=payment=>{// Congratulation, it came here means everything's fine!\nconsole.log(\"The payment was succeeded!\",payment);// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\nthis.props.tranSuccess(payment);};const onCancel=data=>{// User pressed \"cancel\" or close Paypal's popup!\nconsole.log('The payment was cancelled!',data);// You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n};const onError=err=>{// The main Paypal's script cannot be loaded or somethings block the loading of that script!\nconsole.log(\"Error!\",err);// Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n// => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n};let env='sandbox';// you can set here to 'production' for production\nlet currency='USD';// or you can set this value from your props or state\nlet total=this.props.total;// same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n// Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\nconst client={sandbox:'AT6y7HBzmOJ-ctWxuAWX-fqvyIMEQnIGBQ_e4JedsTZTVcfytR2CJe_SiJltiE5tyyl_bbblEpsIgyNJ',production:'YOUR-PRODUCTION-APP-ID'};// In order to get production's app-ID, you will have to send your app to Paypal for approval first\n// For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n//   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n// For production app-ID:\n//   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n// NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\nlet style={size:\"small\",color:\"blue\",shape:\"rect\",label:\"checkout\",tagline:false};return/*#__PURE__*/_jsx(PaypalExpressBtn,{env:env,client:client,currency:currency,total:total,onError:onError,onSuccess:onSuccess,onCancel:onCancel,style:style});}}","map":{"version":3,"names":["React","PaypalExpressBtn","jsx","_jsx","PaypalButton","Component","render","onSuccess","payment","console","log","props","tranSuccess","onCancel","data","onError","err","env","currency","total","client","sandbox","production","style","size","color","shape","label","tagline"],"sources":["C:/Users/Fabian FF/Desktop/envio/sportShop/client/src/components/mainpages/cart/PaypalButton.js"],"sourcesContent":["import React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\n \nexport default class PaypalButton extends React.Component {\n    render() {\n        const onSuccess = (payment) => {\n            // Congratulation, it came here means everything's fine!\n            \t\tconsole.log(\"The payment was succeeded!\", payment);\n            \t\t// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n                    this.props.tranSuccess(payment)\n        }\n \n        const onCancel = (data) => {\n            // User pressed \"cancel\" or close Paypal's popup!\n            console.log('The payment was cancelled!', data);\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n        }\n \n        const onError = (err) => {\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n            console.log(\"Error!\", err);\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n        }\n \n        let env = 'sandbox'; // you can set here to 'production' for production\n        let currency = 'USD'; // or you can set this value from your props or state\n        let total = this.props.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n \n        const client = {\n            sandbox:    'AT6y7HBzmOJ-ctWxuAWX-fqvyIMEQnIGBQ_e4JedsTZTVcfytR2CJe_SiJltiE5tyyl_bbblEpsIgyNJ',\n            production: 'YOUR-PRODUCTION-APP-ID',\n        }\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n        // For production app-ID:\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n \n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n        let style = {\n            size: \"small\",\n            color: \"blue\",\n            shape:\"rect\",\n            label: \"checkout\",\n            tagline: false\n        }\n        return (\n            <PaypalExpressBtn \n            env={env} \n            client={client} \n            currency={currency} \n            total={total} \n            onError={onError} \n            onSuccess={onSuccess} \n            onCancel={onCancel} \n            style={style}\n                \n            />\n        );\n    }\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7D,cAAe,MAAM,CAAAC,YAAY,QAAS,CAAAJ,KAAK,CAACK,SAAU,CACtDC,MAAMA,CAAA,CAAG,CACL,KAAM,CAAAC,SAAS,CAAIC,OAAO,EAAK,CAC3B;AACEC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEF,OAAO,CAAC,CAClD;AACM,IAAI,CAACG,KAAK,CAACC,WAAW,CAACJ,OAAO,CAAC,CAC3C,CAAC,CAED,KAAM,CAAAK,QAAQ,CAAIC,IAAI,EAAK,CACvB;AACAL,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEI,IAAI,CAAC,CAC/C;AACJ,CAAC,CAED,KAAM,CAAAC,OAAO,CAAIC,GAAG,EAAK,CACrB;AACAP,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEM,GAAG,CAAC,CAC1B;AACA;AACJ,CAAC,CAED,GAAI,CAAAC,GAAG,CAAG,SAAS,CAAE;AACrB,GAAI,CAAAC,QAAQ,CAAG,KAAK,CAAE;AACtB,GAAI,CAAAC,KAAK,CAAG,IAAI,CAACR,KAAK,CAACQ,KAAK,CAAE;AAC9B;AAEA,KAAM,CAAAC,MAAM,CAAG,CACXC,OAAO,CAAK,kFAAkF,CAC9FC,UAAU,CAAE,wBAChB,CAAC,CACD;AACA;AACA;AACA;AACA;AAEA;AACA,GAAI,CAAAC,KAAK,CAAG,CACRC,IAAI,CAAE,OAAO,CACbC,KAAK,CAAE,MAAM,CACbC,KAAK,CAAC,MAAM,CACZC,KAAK,CAAE,UAAU,CACjBC,OAAO,CAAE,KACb,CAAC,CACD,mBACIzB,IAAA,CAACF,gBAAgB,EACjBgB,GAAG,CAAEA,GAAI,CACTG,MAAM,CAAEA,MAAO,CACfF,QAAQ,CAAEA,QAAS,CACnBC,KAAK,CAAEA,KAAM,CACbJ,OAAO,CAAEA,OAAQ,CACjBR,SAAS,CAAEA,SAAU,CACrBM,QAAQ,CAAEA,QAAS,CACnBU,KAAK,CAAEA,KAAM,CAEZ,CAAC,CAEV,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module"}